trigger:
  branches:
    include:
    - main
  paths:
    include:
    - src/*
    - deploy/*

variables:
  - group: Azure-Credentials
  - group: Database-Credentials
  
stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      vmImage: 'windows-latest'
    steps:
    - task: UseDotNet@2
      inputs:
        version: '8.0.x'
    
    - task: DotNetCoreCLI@2
      inputs:
        command: 'restore'
        projects: '**/*.csproj'
    
    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '--configuration Release'
    
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: 'tests/**/*.csproj'
        arguments: '--configuration Release'
    
    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)'
    
    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: 'drop'

- stage: DeployStaging
  dependsOn: Build
  condition: succeeded()
  variables:
    Environment: 'staging'
  jobs:
  - deployment: Deploy
    environment: staging
    pool:
      vmImage: 'windows-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
          
          - task: AzureCLI@2
            inputs:
              azureSubscription: 'Azure subscription'
              scriptType: 'pscore'
              scriptPath: '$(System.DefaultWorkingDirectory)/deploy/Deploy-Environment.ps1'
              arguments: >
                -Environment $(Environment)
                -Location "westeurope"
                -SqlAdminUsername "$(SqlAdminUsername)"
                -SqlAdminPassword "$(SqlAdminPassword)"
          
          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'Azure subscription'
              appName: 'app-quartile-store-$(Environment)'
              package: '$(Pipeline.Workspace)/drop/**/*.zip'
              deployToSlotOrASE: true
              resourceGroupName: 'rg-quartile-$(Environment)'
              slotName: 'staging'
          
          - task: AzureFunctionApp@1
            inputs:
              azureSubscription: 'Azure subscription'
              appType: 'functionApp'
              appName: 'func-quartile-product-$(Environment)'
              package: '$(Pipeline.Workspace)/drop/**/*.zip'
              deployToSlotOrASE: true
              resourceGroupName: 'rg-quartile-$(Environment)'
              slotName: 'staging'

- stage: SwapToProduction
  dependsOn: DeployStaging
  condition: succeeded()
  variables:
    Environment: 'prod'
  jobs:
  - deployment: SwapSlots
    environment: production
    pool:
      vmImage: 'windows-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: PowerShell@2
            name: PreSwapValidation
            inputs:
              targetType: 'filePath'
              filePath: '$(System.DefaultWorkingDirectory)/deploy/Test-Deployment.ps1'
              arguments: '-Environment staging -ResourceGroupName rg-quartile-$(Environment)'
          
          - task: AzureAppServiceManage@0
            inputs:
              azureSubscription: 'Azure subscription'
              Action: 'Swap Slots'
              WebAppName: 'app-quartile-store-$(Environment)'
              ResourceGroupName: 'rg-quartile-$(Environment)'
              SourceSlot: 'staging'
          
          - task: AzureAppServiceManage@0
            inputs:
              azureSubscription: 'Azure subscription'
              Action: 'Swap Slots'
              WebAppName: 'func-quartile-product-$(Environment)'
              ResourceGroupName: 'rg-quartile-$(Environment)'
              SourceSlot: 'staging'
          
          - task: PowerShell@2
            name: PostSwapValidation
            inputs:
              targetType: 'filePath'
              filePath: '$(System.DefaultWorkingDirectory)/deploy/Test-Deployment.ps1'
              arguments: '-Environment production -ResourceGroupName rg-quartile-$(Environment)'
        
        routeTraffic:
          steps:
          - task: PowerShell@2
            name: ValidateProduction
            inputs:
              targetType: 'filePath'
              filePath: '$(System.DefaultWorkingDirectory)/deploy/Test-Deployment.ps1'
              arguments: '-Environment production -ResourceGroupName rg-quartile-$(Environment)'
        
        on:
          failure:
            steps:
            - task: PowerShell@2
              name: RollbackDeployment
              inputs:
                targetType: 'filePath'
                filePath: '$(System.DefaultWorkingDirectory)/deploy/Deploy-Environment.ps1'
                arguments: '-Environment $(Environment) -EnableRollback'

- stage: DeployInfrastructure
  jobs:
  - job: Deploy
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'Azure subscription'
        scriptType: 'pscore'
        scriptPath: 'deploy/scripts/create-staging-env.ps1'
    
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'Azure subscription'
        scriptType: 'pscore'
        scriptPath: 'deploy/scripts/configure-slots.ps1'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'Azure subscription'
        scriptType: 'pscore'
        scriptPath: 'deploy/scripts/configure-connection-strings.ps1'

- stage: DeployProduction
  dependsOn: DeployStaging
  condition: succeeded()
  jobs:
  - deployment: Deploy
    environment: production
    pool:
      vmImage: 'windows-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureCLI@2
            inputs:
              azureSubscription: 'Azure subscription'
              scriptType: 'pscore'
              scriptPath: 'deploy/scripts/create-prod-env.ps1'
          
          - task: AzureCLI@2
            inputs:
              azureSubscription: 'Azure subscription'
              scriptType: 'pscore'
              scriptPath: 'deploy/scripts/validate-deployment.ps1'
              arguments: '-Environment production'
          
          - task: AzureCLI@2
            inputs:
              azureSubscription: 'Azure subscription'
              scriptType: 'pscore'
              scriptPath: 'deploy/scripts/swap-slots.ps1'
              arguments: '-SourceSlot staging -TargetSlot production'