trigger:
  branches:
    include:
    - main
  paths:
    include:
    - src/QuartileChallenge.ProductFunction/*

variables:
  solution: 'QuartileChallenge.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      vmImage: 'windows-latest'
    steps:
    - task: UseDotNet@2
      inputs:
        version: '8.0.x'
        
    - task: DotNetCoreCLI@2
      inputs:
        command: 'restore'
        projects: '$(solution)'
        
    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: 'src/QuartileChallenge.ProductFunction/*.csproj'
        arguments: '--configuration $(buildConfiguration)'
        
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: 'tests/**/*.csproj'
        arguments: '--configuration $(buildConfiguration)'
        
    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        projects: 'src/QuartileChallenge.ProductFunction/*.csproj'
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        
    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: 'ProductFunction'

- stage: DeployStaging
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    environment: staging
    pool:
      vmImage: 'windows-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureFunctionApp@1
            inputs:
              azureSubscription: 'Azure subscription'
              appType: 'functionApp'
              appName: 'func-quartile-product-staging'
              package: '$(Pipeline.Workspace)/ProductFunction/**/*.zip'
              deploymentMethod: 'auto'